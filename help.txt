-v            Verbose output
-q            Quiet output
-n            Simulate
-r            Use regular expression match instead of prefix
              (Feasibility of expression is not checked)
-i            Case-insensitive prefix search
-k            Keep pattern and continue search after finding a match
-1            Stop after first match
-a <amount>   Stop after generating <amount> addresses/keys
-C <altcoin>  Generate an address for specific altcoin, use "-C LIST" to view
              a list of all available altcoins, argument is case sensitive!
-X <version>  Generate address with the given version
-Y <version>  Specify private key version (-X provides public key)
-F <format>   Generate address with the given format (pubkey, compressed, script)
-P <pubkey>   Use split-key method with <pubkey> as base public key
-e            Encrypt private keys, prompt for password
-E <password> Encrypt private keys with <password> (UNSAFE)
-t <threads>  Set number of worker threads (Default: number of CPUs)
-f <file>     File containing list of patterns, one per line
              (Use "-" as the file name for stdin)
-o <file>     Write pattern matches to <file>
-s <file>     Seed random number generator from <file>
-Z <prefix>   Private key prefix in hex (1Address.io Dapp front-running protection)
-l <nbits>    Specify number of bits in prefix, only relevant when -Z is specified
-z            Format output of matches in CSV(disables verbose mode)
              Output as [COIN],[PREFIX],[ADDRESS],[PRIVKEY]